version: "3"

services:
  duckdns:
    image: ghcr.io/linuxserver/duckdns
    container_name: duckdns
    environment:
      - PUID=1000 #optional
      - PGID=1000 #optional
      - TZ=Europe/MADRID
      - SUBDOMAINS=yourdomain.duckdns.org
      - TOKEN=XXXaXCXX-AAA-3AAA-e333-XXXXXXX
      - LOG_FILE=true #optional
    volumes:
      - /host_path/duckdns/config:/config #optional
    deploy:
        resources:
            limits:
              memory: 64M
            reservations:
              memory: 16M
    restart: unless-stopped

  pihole:
    container_name: pihole
    image: pihole/pihole
    ports:
      - "53:53/tcp"
      - "53:53/udp"
      - "67:67/udp"
      - "80:80/tcp"
      - "443:443/tcp"
    environment:
      TZ: 'Europe/Madrid'
      WEBPASSWORD: 'SOMEPASSWORD'
      ADMIN_EMAIL: 'albertojordan@youremail.com'
    # Volumes store your data between container upgrades
    volumes:
      - '/host_path/pihole/etc-pihole/:/etc/pihole/'
      - '/host_path/pihole/etc-dnsmasq.d/:/etc/dnsmasq.d/'
    # Recommended but not required (DHCP needs NET_ADMIN)
    #   https://github.com/pi-hole/docker-pi-hole#note-on-capabilities
    cap_add:
      - NET_ADMIN
    deploy:
        resources:
            limits:
              memory: 128M
            reservations:
              memory: 16M
    restart: unless-stopped

  wireguard:
    image: ghcr.io/linuxserver/wireguard
    container_name: wireguard
    cap_add:
      - NET_ADMIN
      - SYS_MODULE
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Madrid
      - SERVERURL=youdomain.duckdns.org #optional
      - SERVERPORT=51820 #optional
      - PEERS=2 #optional
      - PEERDNS=auto #optional
      - INTERNAL_SUBNET=10.13.13.0 #optional
      - ALLOWEDIPS=0.0.0.0/0 #optional
    volumes:
      - /lib/modules:/lib/modules #APPLY IF YOUR KERNEL IS 5.4+
      - /usr/src:/usr/src #APPLY IF YOUR KERNEL IS 5.4+
      - /host_path/wireguard/config:/config
    ports:
      - 51820:51820/udp
    sysctls:
      - net.ipv4.conf.all.src_valid_mark=1
    deploy:
        resources:
            limits:
              memory: 128M
            reservations:
              memory: 16M
    restart: unless-stopped
